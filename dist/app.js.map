{"version":3,"sources":["index.es6","lib/enum.es6","lib/region.es6","lib/spider.es6"],"names":[],"mappings":";;;;;;;;;;;;;;IAEqB,QACnB,SADmB,KACnB,GAAc;wBADK,OACL;;AACZ,UAAQ,GAAR,CAAY,QAAZ,EADY;CAAd;;kBADmB;;;;;;;;;ICFA,OACnB,SADmB,IACnB,GAAsB;;;wBADH,MACG;;oCAAP;;GAAO;;AACpB,QAAM,OAAN,CAAc;WAAK,MAAK,CAAL,IAAU,OAAO,CAAP,CAAV;GAAL,CAAd,CADoB;AAEpB,SAAO,MAAP,CAAc,IAAd,EAFoB;CAAtB;;kBADmB;;;;;;;;;ACErB,IAAM,SAAS,mBACb,IADa,EAEb,QAFa,EAGb,OAHa,EAIb,QAJa,EAKb,OALa,EAMb,eANa,CAAT;;;;;;;;;;;;;;;;;;;;;;;;;ICEe;AAGnB,WAHmB,MAGnB,GAAc;0BAHK,QAGL;;AACZ,SAAK,MAAL,GAAc,iBAAO,MAAP,CADF;GAAd;;eAHmB;;mCAOI;AACrB,cAAQ,KAAK,MAAL;AACN,aAAK,iBAAO,EAAP;AACH,iBAAO,4BAAP,CADF;AADF,aAGO,iBAAO,MAAP;AACH,iBAAO,4BAAP,CADF;AAHF,aAKO,iBAAO,KAAP;AACH,iBAAO,4BAAP,CADF;AALF,aAOO,iBAAO,MAAP;AACH,iBAAO,4BAAP,CADF;AAPF,aASO,iBAAO,KAAP;AACH,iBAAO,+BAAP,CADF;AATF,aAWO,iBAAO,aAAP;AACH,iBAAO,6BAAP,CADF;AAXF,OADqB;;;;oCAiBG;AACxB,cAAQ,KAAK,MAAL;AACN,aAAK,iBAAO,EAAP;AACH,iBAAO,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAAP,CADF;AADF,aAGO,iBAAO,MAAP;AACH,iBAAO,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,EAA8C,OAA9C,EAAuD,OAAvD,CAAP,CADF;AAHF,aAKO,iBAAO,KAAP;AACH,iBAAO,CAAC,OAAD,CAAP,CADF;AALF,aAOO,iBAAO,MAAP;AACH,iBAAO,CAAC,OAAD,CAAP,CADF;AAPF,aASO,iBAAO,KAAP;AACH,iBAAO,CAAC,OAAD,CAAP,CADF;AATF,aAWO,iBAAO,aAAP;AACH,iBAAO,CAAC,OAAD,CAAP,CADF;AAXF,OADwB;;;;SAxBP","file":"app.js","sourcesContent":["import Spider from './lib/spider'\n\nexport default class Scope {\n  constructor() {\n    console.log(\"scope!\")\n  }\n}","export default class Enum {\n  constructor(...props) {\n    props.forEach(p => this[p] = Symbol(p))\n    Object.freeze(this)\n  }\n}","import Enum from './enum'\n\nconst Region = new Enum(\n  'US',\n  'Europe',\n  'Korea',\n  'Taiwan',\n  'China',\n  'SouthEastAsia'\n)\n","import request from 'request'\nimport Enum from './enum'\nimport Region from './region'\n\nexport default class Spider {\n  region: Region;\n\n  constructor() {\n    this.region = Region.Europe\n  }\n\n  hostBaseName(): string {\n    switch (this.region) {\n      case Region.US:\n        return \"https://us.api.battle.net/\"\n      case Region.Europe:\n        return \"https://eu.api.battle.net/\"\n      case Region.Korea:\n        return \"https://kr.api.battle.net/\"\n      case Region.Taiwan:\n        return \"https://tw.api.battle.net/\"\n      case Region.China:\n        return \"https://api.battlenet.com.cn/\"\n      case Region.SouthEastAsia:\n        return \"https://sea.api.battle.net/\"\n    }\n  }\n\n  regionLocales(): [string] {\n    switch (this.region) {\n      case Region.US:\n        return [\"en_US\", \"es_MX\", \"pt_BR\"]\n      case Region.Europe:\n        return [\"en_GB\", \"es_ES\", \"fr_FR\", \"ru_RU\", \"de_DE\", \"pt_PT\", \"it_IT\"]\n      case Region.Korea:\n        return [\"ko_KR\"]\n      case Region.Taiwan:\n        return [\"zh_TW\"]\n      case Region.China:\n        return [\"zh_CN\"]\n      case Region.SouthEastAsia:\n        return [\"en_US\"]\n    }\n  }\n}"],"sourceRoot":"/source/"}